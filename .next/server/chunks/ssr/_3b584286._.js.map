{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/user/Desktop/adminka/src/app/students/page.tsx"],"sourcesContent":["import { Button, Switch, Table } from \"antd\";\nimport { CheckboxGroupProps } from \"antd/es/checkbox\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport useGlobalStore from \"./store/my-store.ts\";\n\ntype StudentType = {\n  id: number;\n  firstName: string;\n  lastName: string;\n  age: number;\n  gender: \"male\" | \"female\";\n  active: boolean;\n};\n\ntype GlobalStoreType = {\n  students: StudentType[];\n  groups: any[];\n};\n\nfunction SrudentsPage() {\n  const state = useGlobalStore();\n\n  const [open, setOpen] = useState(false);\n\n  const showDrawer = () => {\n    setOpen(true);\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  // const num: string[] = [\"olma\", \"anor\", \"nok\"];\n  // const sum = num.reduce((prew, item, {}): any => {\n  //   if (item.length > 0) {\n  //     console.log(item);\n\n  //     return prew.length;\n  //   }\n\n  //   return item.length;\n  // });\n  return (\n    <>\n      {/* {sum} */}\n      <div className=\"flex gap-2 items-center \">\n        <Button>Umumiy son: {state.students.length}</Button>\n        <Button>\n          Faollar:\n          {\n            state.students.filter((item: any) => {\n              return item.active;\n            }).length\n          }\n        </Button>\n        <Button>\n          Nofaollar:{\" \"}\n          {state.students.reduce((count: any, item: any) => {\n            return !item.active ? count + 1 : count;\n          }, 0)}\n        </Button>\n      </div>\n      <div className=\"flex flex-col my-5\">\n        <AddStudent onClose={onClose} open={open} showDrawer={showDrawer} />\n        <Table\n          columns={[\n            {\n              title: \"ID\",\n              dataIndex: \"id\",\n            },\n            {\n              title: \"ID\",\n              dataIndex: \"id\",\n            },\n            {\n              title: \"Ism\",\n              dataIndex: \"firstName\",\n            },\n            {\n              title: \"Familiya\",\n              dataIndex: \"lastName\",\n            },\n            {\n              title: \"Yosh\",\n              dataIndex: \"age\",\n            },\n            {\n              title: \"Jinsi\",\n              dataIndex: \"gender\",\n              render: (v, item: any) => {\n                return (\n                  <span key={item.id}>{v === \"male\" ? \"Erkak\" : \"Ayol\"}</span>\n                );\n              },\n            },\n            {\n              title: \"Active\",\n              dataIndex: \"active\",\n              render: (v, studentt) => {\n                return (\n                  <Switch\n                    checked={v}\n                    onChange={(checked) => {\n                      const new_students = state.students.map((item: any) => {\n                        if (item.id === studentt.id) {\n                          return {\n                            ...item,\n                            active: checked,\n                          };\n                        }\n                        return item;\n                      });\n                      useGlobalStore.setState({ students: new_students });\n                    }}\n                  />\n                );\n              },\n            },\n          ]}\n          dataSource={state.students}\n        />\n        <Button\n          color=\"danger\"\n          type=\"text\"\n          variant=\"text\"\n          onClick={() => {\n            localStorage.clear();\n          }}\n        >\n          Hammasini ochirish{\" \"}\n        </Button>\n      </div>\n    </>\n  );\n}\n\nexport default SrudentsPage;\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;;;;;;;;;;;;AAkBA,SAAS;IACP,MAAM,QAAQ;IAEd,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,MAAM,aAAa;QACjB,QAAQ;IACV;IAEA,MAAM,UAAU;QACd,QAAQ;IACV;IAEA,iDAAiD;IACjD,oDAAoD;IACpD,2BAA2B;IAC3B,yBAAyB;IAEzB,0BAA0B;IAC1B,MAAM;IAEN,wBAAwB;IACxB,MAAM;IACN,qBACE;;0BAEE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,mIAAA,CAAA,SAAM;;4BAAC;4BAAa,MAAM,QAAQ,CAAC,MAAM;;;;;;;kCAC1C,8OAAC,mIAAA,CAAA,SAAM;;4BAAC;4BAGJ,MAAM,QAAQ,CAAC,MAAM,CAAC,CAAC;gCACrB,OAAO,KAAK,MAAM;4BACpB,GAAG,MAAM;;;;;;;kCAGb,8OAAC,mIAAA,CAAA,SAAM;;4BAAC;4BACK;4BACV,MAAM,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAY;gCAClC,OAAO,CAAC,KAAK,MAAM,GAAG,QAAQ,IAAI;4BACpC,GAAG;;;;;;;;;;;;;0BAGP,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAW,SAAS;wBAAS,MAAM;wBAAM,YAAY;;;;;;kCACtD,8OAAC,mIAAA,CAAA,QAAK;wBACJ,SAAS;4BACP;gCACE,OAAO;gCACP,WAAW;4BACb;4BACA;gCACE,OAAO;gCACP,WAAW;4BACb;4BACA;gCACE,OAAO;gCACP,WAAW;4BACb;4BACA;gCACE,OAAO;gCACP,WAAW;4BACb;4BACA;gCACE,OAAO;gCACP,WAAW;4BACb;4BACA;gCACE,OAAO;gCACP,WAAW;gCACX,QAAQ,CAAC,GAAG;oCACV,qBACE,8OAAC;kDAAoB,MAAM,SAAS,UAAU;uCAAnC,KAAK,EAAE;;;;;gCAEtB;4BACF;4BACA;gCACE,OAAO;gCACP,WAAW;gCACX,QAAQ,CAAC,GAAG;oCACV,qBACE,8OAAC,mIAAA,CAAA,SAAM;wCACL,SAAS;wCACT,UAAU,CAAC;4CACT,MAAM,eAAe,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC;gDACvC,IAAI,KAAK,EAAE,KAAK,SAAS,EAAE,EAAE;oDAC3B,OAAO;wDACL,GAAG,IAAI;wDACP,QAAQ;oDACV;gDACF;gDACA,OAAO;4CACT;4CACA,eAAe,QAAQ,CAAC;gDAAE,UAAU;4CAAa;wCACnD;;;;;;gCAGN;4BACF;yBACD;wBACD,YAAY,MAAM,QAAQ;;;;;;kCAE5B,8OAAC,mIAAA,CAAA,SAAM;wBACL,OAAM;wBACN,MAAK;wBACL,SAAQ;wBACR,SAAS;4BACP,aAAa,KAAK;wBACpB;;4BACD;4BACoB;;;;;;;;;;;;;;;AAK7B;uCAEe","debugId":null}}]
}